/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DebitVault, DebitVaultInterface } from "../DebitVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aaveLendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creditVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "counter",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creditor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debitor",
        type: "address",
      },
    ],
    name: "positionRepay",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_collateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
    ],
    name: "openPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_counter",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creditor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "repayDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class DebitVault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _aaveLendingPool: string,
    _creditVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DebitVault> {
    return super.deploy(
      _aaveLendingPool,
      _creditVault,
      overrides || {}
    ) as Promise<DebitVault>;
  }
  getDeployTransaction(
    _aaveLendingPool: string,
    _creditVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aaveLendingPool,
      _creditVault,
      overrides || {}
    );
  }
  attach(address: string): DebitVault {
    return super.attach(address) as DebitVault;
  }
  connect(signer: Signer): DebitVault__factory {
    return super.connect(signer) as DebitVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebitVaultInterface {
    return new utils.Interface(_abi) as DebitVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebitVault {
    return new Contract(address, _abi, signerOrProvider) as DebitVault;
  }
}
