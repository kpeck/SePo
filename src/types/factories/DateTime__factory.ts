/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DateTime, DateTimeInterface } from "../DateTime";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "getDaysInMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getSecond",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekday",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getYear",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "isLeapYear",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "leapYearsBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "second",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639054bdec1161008c578063a6f0e57711610066578063a6f0e577146102d8578063b19999371461030d578063b238ad0e1461032a578063fa93f88314610354576100ea565b80639054bdec1461023b57806392d6631314610287578063a324ad24146102bb576100ea565b806365c72840116100c857806365c72840146101935780637f791833146101b05780638aa001fc146101ec5780638c8d98a014610209576100ea565b80633e239e1a146100ef5780634ac1ad781461012257806362ba96871461013f575b600080fd5b61010c6004803603602081101561010557600080fd5b5035610371565b6040805160ff9092168252519081900360200190f35b61010c6004803603602081101561013857600080fd5b503561038c565b610181600480360360a081101561015557600080fd5b5061ffff8135169060ff602082013581169160408101358216916060820135811691608001351661039e565b60408051918252519081900360200190f35b61010c600480360360208110156101a957600080fd5b50356103b9565b610181600480360360808110156101c657600080fd5b5061ffff8135169060ff60208201358116916040810135821691606090910135166103ce565b61010c6004803603602081101561020257600080fd5b50356103e8565b6101816004803603606081101561021f57600080fd5b5061ffff8135169060ff602082013581169160400135166103f2565b610181600480360360c081101561025157600080fd5b5061ffff8135169060ff602082013581169160408101358216916060820135811691608081013582169160a0909101351661040c565b6102a46004803603602081101561029d57600080fd5b5035610548565b6040805161ffff9092168252519081900360200190f35b61010c600480360360208110156102d157600080fd5b50356105d8565b6102f9600480360360208110156102ee57600080fd5b503561ffff166105ed565b604080519115158252519081900360200190f35b6101816004803603602081101561032357600080fd5b503561063f565b61010c6004803603604081101561034057600080fd5b50803560ff16906020013561ffff1661065a565b61010c6004803603602081101561036a57600080fd5b5035610722565b60006018603c8084045b048161038357fe5b0690505b919050565b60006007600462015180840401610383565b60006103af8686868686600061040c565b9695505050505050565b60006103c48261072d565b6040015192915050565b60006103df8585858560008061040c565b95945050505050565b6000603c82610383565b6000610404848484600080600061040c565b949350505050565b60006107b25b8761ffff168161ffff1610156104505761042b816105ed565b1561043e576301e2850082019150610448565b6301e13380820191505b600101610412565b61045861087a565b601f8152610465896105ed565b1561047657601d602082015261047e565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff16101561050d57806001830361ffff16600c81106104ef57fe5b602002015160ff1662015180028301925081806001019250506104cd565b6001870360ff166201518002830192508560ff16610e1002830192508460ff16603c02830192508360ff168301925050509695505050505050565b6000806107b26301e13380840481019082906105639061063f565b6105708361ffff1661063f565b039050806301e285000283019250806107b2830361ffff16036301e1338002830192505b848311156105d0576105a8600183036105ed565b156105bb576301e28500830392506105c5565b6301e13380830392505b600182039150610594565b509392505050565b60006105e38261072d565b6020015192915050565b6000600382161561060057506000610387565b606461ffff83160661ffff1660001461061b57506001610387565b61019061ffff83160661ffff1660001461063757506000610387565b506001919050565b60001901600061019082046064830460048404030192915050565b60008260ff166001148061067157508260ff166003145b8061067f57508260ff166005145b8061068d57508260ff166007145b8061069b57508260ff166008145b806106a957508260ff16600a145b806106b757508260ff16600c145b156106c45750601f61071c565b8260ff16600414806106d957508260ff166006145b806106e757508260ff166009145b806106f557508260ff16600b145b156107025750601e61071c565b61070b826105ed565b156107185750601d61071c565b50601c5b92915050565b6000603c808361037b565b610735610899565b6000808061074285610548565b61ffff1684526107536107b261063f565b84516107629061ffff1661063f565b039150816301e285000283019250816107b285600001510361ffff16036301e1338002830192506000600191505b600c8260ff16116107da576107a982866000015161065a565b60ff16620151800290508584820111156107cb5760ff821660208601526107da565b92830192600190910190610790565b600191505b6107f18560200151866000015161065a565b60ff168260ff161161082c578584620151800111156108185760ff8216604086015261082c565b6201518093909301926001909101906107df565b61083586610371565b60ff16606086015261084686610722565b60ff166080860152610857866103e8565b60ff1660a08601526108688661038c565b60ff1660c08601525092949350505050565b604051806101800160405280600c906020820280368337509192915050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091529056fea164736f6c6343000706000a";

export class DateTime__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DateTime> {
    return super.deploy(overrides || {}) as Promise<DateTime>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DateTime {
    return super.attach(address) as DateTime;
  }
  connect(signer: Signer): DateTime__factory {
    return super.connect(signer) as DateTime__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DateTimeInterface {
    return new utils.Interface(_abi) as DateTimeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DateTime {
    return new Contract(address, _abi, signerOrProvider) as DateTime;
  }
}
