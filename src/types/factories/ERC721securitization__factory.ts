/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721securitization,
  ERC721securitizationInterface,
} from "../ERC721securitization";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152695365637572697469657360b01b60208083019182528351808501909452600384526253656360e81b9084015281519192916200005f91600091620000f3565b50805162000075906001906020840190620000f3565b505050620000926200008c6200009d60201b60201c565b620000a1565b6000600855620001d6565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b611a0980620001e66000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063715018a6116100b2578063b88d4fde11610081578063d85d3d2711610066578063d85d3d2714610251578063e985e9c514610264578063f2fde38b146102a057600080fd5b8063b88d4fde1461022b578063c87b56dd1461023e57600080fd5b8063715018a6146101f75780638da5cb5b146101ff57806395d89b4114610210578063a22cb4651461021857600080fd5b806323b872dd116100ee57806323b872dd1461019d57806342842e0e146101b05780636352211e146101c357806370a08231146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e366004611587565b6102b3565b60405190151581526020015b60405180910390f35b610150610305565b60405161013f91906115fc565b61017061016b36600461160f565b610397565b6040516001600160a01b03909116815260200161013f565b61019b610196366004611644565b610431565b005b61019b6101ab36600461166e565b610547565b61019b6101be36600461166e565b6105ce565b6101706101d136600461160f565b6105e9565b6101e96101e43660046116aa565b610674565b60405190815260200161013f565b61019b61070e565b6007546001600160a01b0316610170565b610150610774565b61019b6102263660046116c5565b610783565b61019b61023936600461178d565b610792565b61015061024c36600461160f565b610820565b6101e961025f366004611809565b6109b3565b610133610272366004611852565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61019b6102ae3660046116aa565b6109e9565b60006001600160e01b031982166380ac58cd60e01b14806102e457506001600160e01b03198216635b5e139f60e01b145b806102ff57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461031490611885565b80601f016020809104026020016040519081016040528092919081815260200182805461034090611885565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061043c826105e9565b9050806001600160a01b0316836001600160a01b031614156104aa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161040c565b336001600160a01b03821614806104c657506104c68133610272565b6105385760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161040c565b6105428383610acb565b505050565b6105513382610b39565b6105c35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161040c565b610542838383610c2f565b61054283838360405180602001604052806000815250610792565b6000818152600260205260408120546001600160a01b0316806102ff5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161040c565b60006001600160a01b0382166106f25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161040c565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146107685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6107726000610de3565b565b60606001805461031490611885565b61078e338383610e35565b5050565b61079c3383610b39565b61080e5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161040c565b61081a84848484610f04565b50505050565b6000818152600260205260409020546060906001600160a01b03166108ad5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000606482015260840161040c565b600082815260066020526040812080546108c690611885565b80601f01602080910402602001604051908101604052809291908181526020018280546108f290611885565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b50505050509050600061095d60408051602081019091526000815290565b9050805160001415610970575092915050565b8151156109a257808260405160200161098a9291906118c0565b60405160208183030381529060405292505050919050565b6109ab84610f8d565b949350505050565b60088054600091826109c483611905565b91905055506109d533600854611083565b6109e1600854836111c5565b505060085490565b6007546001600160a01b03163314610a435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b6001600160a01b038116610abf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161040c565b610ac881610de3565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b00826105e9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610bb25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161040c565b6000610bbd836105e9565b9050806001600160a01b0316846001600160a01b03161480610c0457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109ab5750836001600160a01b0316610c1d84610397565b6001600160a01b031614949350505050565b826001600160a01b0316610c42826105e9565b6001600160a01b031614610cbe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161040c565b6001600160a01b038216610d205760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040c565b610d2b600082610acb565b6001600160a01b0383166000908152600360205260408120805460019290610d54908490611920565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d82908490611937565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e975760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f0f848484610c2f565b610f1b8484848461126e565b61081a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161040c565b6000818152600260205260409020546060906001600160a01b031661101a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161040c565b600061103160408051602081019091526000815290565b90506000815111611051576040518060200160405280600081525061107c565b8061105b846113c2565b60405160200161106c9291906118c0565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166110d95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040c565b6000818152600260205260409020546001600160a01b03161561113e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040c565b6001600160a01b0382166000908152600360205260408120805460019290611167908490611937565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b031661124f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161040c565b60008281526006602090815260409091208251610542928401906114d8565b60006001600160a01b0384163b156113b757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112b290339089908890889060040161194f565b6020604051808303816000875af19250505080156112ed575060408051601f3d908101601f191682019092526112ea9181019061198b565b60015b61139d573d80801561131b576040519150601f19603f3d011682016040523d82523d6000602084013e611320565b606091505b5080516113955760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161040c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109ab565b506001949350505050565b6060816113e65750506040805180820190915260018152600360fc1b602082015290565b8160005b811561141057806113fa81611905565b91506114099050600a836119be565b91506113ea565b60008167ffffffffffffffff81111561142b5761142b611701565b6040519080825280601f01601f191660200182016040528015611455576020820181803683370190505b5090505b84156109ab5761146a600183611920565b9150611477600a866119d2565b611482906030611937565b60f81b818381518110611497576114976119e6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506114d1600a866119be565b9450611459565b8280546114e490611885565b90600052602060002090601f016020900481019282611506576000855561154c565b82601f1061151f57805160ff191683800117855561154c565b8280016001018555821561154c579182015b8281111561154c578251825591602001919060010190611531565b5061155892915061155c565b5090565b5b80821115611558576000815560010161155d565b6001600160e01b031981168114610ac857600080fd5b60006020828403121561159957600080fd5b813561107c81611571565b60005b838110156115bf5781810151838201526020016115a7565b8381111561081a5750506000910152565b600081518084526115e88160208601602086016115a4565b601f01601f19169290920160200192915050565b60208152600061107c60208301846115d0565b60006020828403121561162157600080fd5b5035919050565b80356001600160a01b038116811461163f57600080fd5b919050565b6000806040838503121561165757600080fd5b61166083611628565b946020939093013593505050565b60008060006060848603121561168357600080fd5b61168c84611628565b925061169a60208501611628565b9150604084013590509250925092565b6000602082840312156116bc57600080fd5b61107c82611628565b600080604083850312156116d857600080fd5b6116e183611628565b9150602083013580151581146116f657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561173257611732611701565b604051601f8501601f19908116603f0116810190828211818310171561175a5761175a611701565b8160405280935085815286868601111561177357600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156117a357600080fd5b6117ac85611628565b93506117ba60208601611628565b925060408501359150606085013567ffffffffffffffff8111156117dd57600080fd5b8501601f810187136117ee57600080fd5b6117fd87823560208401611717565b91505092959194509250565b60006020828403121561181b57600080fd5b813567ffffffffffffffff81111561183257600080fd5b8201601f8101841361184357600080fd5b6109ab84823560208401611717565b6000806040838503121561186557600080fd5b61186e83611628565b915061187c60208401611628565b90509250929050565b600181811c9082168061189957607f821691505b602082108114156118ba57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516118d28184602088016115a4565b8351908301906118e68183602088016115a4565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611919576119196118ef565b5060010190565b600082821015611932576119326118ef565b500390565b6000821982111561194a5761194a6118ef565b500190565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261198160808301846115d0565b9695505050505050565b60006020828403121561199d57600080fd5b815161107c81611571565b634e487b7160e01b600052601260045260246000fd5b6000826119cd576119cd6119a8565b500490565b6000826119e1576119e16119a8565b500690565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080a000a";

export class ERC721securitization__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721securitization> {
    return super.deploy(overrides || {}) as Promise<ERC721securitization>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721securitization {
    return super.attach(address) as ERC721securitization;
  }
  connect(signer: Signer): ERC721securitization__factory {
    return super.connect(signer) as ERC721securitization__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721securitizationInterface {
    return new utils.Interface(_abi) as ERC721securitizationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721securitization {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721securitization;
  }
}
