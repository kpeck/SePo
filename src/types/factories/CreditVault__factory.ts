/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CreditVault, CreditVaultInterface } from "../CreditVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aaveLendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_aaveBtcStable",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "counter",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debitor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creditor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "month",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "newPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "counter",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debitor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creditor",
        type: "address",
      },
    ],
    name: "positionTakeCollateral",
    type: "event",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveLendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approveOnCreditDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "getDaysInMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getSecond",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekday",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getYear",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "isLeapYear",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "leapYearsBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_counter",
        type: "uint256",
      },
    ],
    name: "returnCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_debitor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creditor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_collateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interest",
        type: "uint256",
      },
    ],
    name: "saveData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_debitVault",
        type: "address",
      },
    ],
    name: "setDebitVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_counter",
        type: "uint256",
      },
    ],
    name: "takeCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "second",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002109380380620021098339810160408190526200003491620000f4565b6200003f3362000087565b600180546001600160a01b039485166001600160a01b03199182161790915560028054928516928216929092179091556003805492909316911617905560006004556200013e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ef57600080fd5b919050565b6000806000606084860312156200010a57600080fd5b6200011584620000d7565b92506200012560208501620000d7565b91506200013560408501620000d7565b90509250925092565b611fbb806200014e6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638c8d98a0116100ee578063b199993711610097578063d6ce984f11610071578063d6ce984f1461039d578063e9d337b8146103b0578063f2fde38b146103c3578063fa93f883146103d657600080fd5b8063b19999371461034f578063b238ad0e14610362578063d53303441461037557600080fd5b806392d66313116100c857806392d66313146102f3578063a324ad2414610319578063a6f0e5771461032c57600080fd5b80638c8d98a0146102a85780638da5cb5b146102bb5780639054bdec146102e057600080fd5b806365c72840116101505780637f7918331161012a5780637f7918331461026f5780638aa001fc146102825780638b00e1961461029557600080fd5b806365c72840146102415780636a03e64714610254578063715018a61461026757600080fd5b80634ac1ad78116101815780634ac1ad78146101fa57806351cff8d91461020d57806362ba96871461022057600080fd5b80630fef48e3146101a85780633e239e1a146101bd57806347e7ef24146101e7575b600080fd5b6101bb6101b6366004611a98565b6103e9565b005b6101d06101cb366004611b1b565b6106fe565b60405160ff90911681526020015b60405180910390f35b6101bb6101f5366004611b34565b610728565b6101d0610208366004611b1b565b610861565b6101bb61021b366004611b5e565b61087d565b61023361022e366004611b9c565b610a88565b6040519081526020016101de565b6101d061024f366004611b1b565b610aa3565b6101bb610262366004611b5e565b610ab8565b6101bb610b41565b61023361027d366004611c01565b610ba7565b6101d0610290366004611b1b565b610bc1565b6101bb6102a3366004611b1b565b610bce565b6102336102b6366004611c55565b610d42565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b6102336102ee366004611c98565b610d5e565b610306610301366004611b1b565b610f0f565b60405161ffff90911681526020016101de565b6101d0610327366004611b1b565b610fff565b61033f61033a366004611d0c565b611014565b60405190151581526020016101de565b61023361035d366004611b1b565b611073565b6101d0610370366004611d27565b6110b8565b610388610383366004611d5a565b61117f565b604080519283526020830191909152016101de565b6101bb6103ab366004611b1b565b6112d5565b6001546102c8906001600160a01b031681565b6101bb6103d1366004611b5e565b611340565b6101d06103e4366004611b1b565b611422565b6103fe6001600160a01b038616333087611430565b8860076000600454815260200190815260200160002060000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508760076000600454815260200190815260200160002060010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508660076000600454815260200190815260200160002060020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460076000600454815260200190815260200160002060030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555085600760006004548152602001908152602001600020600401819055508360076000600454815260200190815260200160002060050181905550826007600060045481526020019081526020016000206006018190555081600760006004548152602001908152602001600020600701819055508060076000600454815260200190815260200160002060080181905550600060076000600454815260200190815260200160002060090160006101000a81548160ff021916908315150217905550600060076000600454815260200190815260200160002060090160016101000a81548160ff0219169083151502179055506001600660008a6001600160a01b03166001600160a01b031681526020019081526020016000206000896001600160a01b03166001600160a01b0316815260200190815260200160002060010160006101000a81548160ff0219169083151502179055507f32506459263e9be3aad036f7f84695c83c3ddc58549c43aa0c443404c56a99d16004548a8a8a898b8a8a8a6040516106d6999897969594939291909889526001600160a01b0397881660208a01529587166040890152938616606088015291909416608086015260a085019390935260c084019290925260e08301919091526101008201526101200190565b60405180910390a1600480549060006106ee83611d92565b9190505550505050505050505050565b60006018603c61070e8185611dc3565b6107189190611dc3565b6107229190611dd7565b92915050565b61073d6001600160a01b038316333084611430565b600154610757906001600160a01b038481169116836114ce565b60015460405163e8eda9df60e01b81526001600160a01b03848116600483015260248201849052306044830152600060648301529091169063e8eda9df90608401600060405180830381600087803b1580156107b257600080fd5b505af11580156107c6573d6000803e3d6000fd5b50503360009081526006602090815260408083206001600160a01b0388168452909152902054151591506108259050573360009081526006602090815260408083206001600160a01b03861684529091529020600101805460ff191690555b3360009081526006602090815260408083206001600160a01b038616845290915281208054839290610858908490611deb565b90915550505050565b600060076108726201518084611dc3565b610718906004611deb565b3360009081526006602090815260408083206001600160a01b038516845290915290206001015460ff161561091f5760405162461bcd60e51b815260206004820152602760248201527f546865206465706f7369747320696e207468697320617373657420617265206260448201527f6f72726f7765640000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526006602090815260408083206001600160a01b03851684529091529020546109b55760405162461bcd60e51b815260206004820152602960248201527f546865206465706f7369747320696e207468697320617373657420617265206560448201527f7175616c20746f203000000000000000000000000000000000000000000000006064820152608401610916565b6001543360008181526006602090815260408083206001600160a01b038781168086529190935292819020549051631a4ca37b60e21b81526004810193909352602483015260448201929092529116906369328dec906064016020604051808303816000875af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a519190611e03565b503360009081526006602090815260408083206001600160a01b03949094168352929052908120908155600101805460ff19169055565b6000610a9986868686866000610d5e565b9695505050505050565b6000610aae826115ef565b6040015192915050565b6000546001600160a01b03163314610b125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610916565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b9b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610916565b610ba560006117d7565b565b6000610bb885858585600080610d5e565b95945050505050565b6000610722603c83611dd7565b60008181526007602052604090206009015460ff1615610c305760405162461bcd60e51b815260206004820152601760248201527f506f736974696f6e20616c726561647920636c6f7365640000000000000000006044820152606401610916565b60008181526007602081905260409091200154610c4c42610f0f565b61ffff161180610ca0575060008181526007602081905260409091200154610c7342610f0f565b61ffff16148015610ca05750600081815260076020526040902060060154610c9a42610fff565b60ff1610155b610cec5760405162461bcd60e51b815260206004820152601160248201527f4e6f7420796574206d61747572617465640000000000000000000000000000006044820152606401610916565b600081815260076020526040902060018101546005820154600390920154610d24926001600160a01b03918216929190911690611834565b6000908152600760205260409020600901805460ff19166001179055565b6000610d548484846000806000610d5e565b90505b9392505050565b60006107b25b8761ffff168161ffff161015610dba57610d7d81611014565b15610d9757610d906301e2850083611deb565b9150610da8565b610da56301e1338083611deb565b91505b80610db281611e1c565b915050610d64565b610dc2611a5d565b601f8152610dcf89611014565b15610de057601d6020820152610de8565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff161015610e995780610e52600184611e54565b61ffff16600c8110610e6657610e66611e3e565b6020020151610e7b9060ff1662015180611e77565b610e859084611deb565b925081610e9181611e1c565b925050610e37565b610ea4600188611e96565b610eb49060ff1662015180611e77565b610ebe9084611deb565b9250610ecf60ff8716610e10611e77565b610ed99084611deb565b9250610ee960ff8616603c611e77565b610ef39084611deb565b9250610f0260ff851684611deb565b9998505050505050505050565b6000808080610f226301e1338086611dc3565b610f2e906107b2611deb565b9150610f3b6107b2611073565b610f488361ffff16611073565b610f529190611eb9565b9050610f62816301e28500611e77565b610f6c9084611deb565b925080610f7b6107b284611e54565b61ffff16610f899190611eb9565b610f97906301e13380611e77565b610fa19084611deb565b92505b84831115610ff757610fba61033a600184611e54565b15610fd457610fcd6301e2850084611eb9565b9250610fe5565b610fe26301e1338084611eb9565b92505b610ff0600183611e54565b9150610fa4565b509392505050565b600061100a826115ef565b6020015192915050565b6000611021600483611ed0565b61ffff161561103257506000919050565b61103d606483611ed0565b61ffff161561104e57506001919050565b61105a61019083611ed0565b61ffff161561106b57506000919050565b506001919050565b6000611080600183611eb9565b915061108e61019083611dc3565b611099606484611dc3565b6110a4600485611dc3565b6110ae9190611eb9565b6107229190611deb565b60008260ff16600114806110cf57508260ff166003145b806110dd57508260ff166005145b806110eb57508260ff166007145b806110f957508260ff166008145b8061110757508260ff16600a145b8061111557508260ff16600c145b156111225750601f610722565b8260ff166004148061113757508260ff166006145b8061114557508260ff166009145b8061115357508260ff16600b145b156111605750601e610722565b61116982611014565b156111765750601d610722565b50601c92915050565b600081815260076020526040812060090154819060ff16156111e35760405162461bcd60e51b815260206004820152601760248201527f706f736974696f6e20616c726561647920636c6f7365640000000000000000006044820152606401610916565b6000838152600760205260408120600481015460089091015490919061120a606484611dc3565b6112149190611e77565b9050806112218388611eb9565b101561127b5760405162461bcd60e51b815260206004820152602360248201527f6e6f7420656e6f75676820616d6f756e7420666f72207468652072657061796d604482015262195b9d60ea1b6064820152608401610916565b6000858152600760205260409020805460058201546003909201546112b0926001600160a01b03918216929190911690611834565b600094855260076020526040909420600901805460ff19166001179055949293505050565b600254600554604051630c04a8a160e41b81526001600160a01b0391821660048201526024810184905291169063c04a8a1090604401600060405180830381600087803b15801561132557600080fd5b505af1158015611339573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461139a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610916565b6001600160a01b0381166114165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610916565b61141f816117d7565b50565b6000603c6107188184611dc3565b6040516001600160a01b03808516602483015283166044820152606481018290526114c89085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611864565b50505050565b8015806115485750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115469190611e03565b155b6115ba5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610916565b6040516001600160a01b0383166024820152604481018290526115ea90849063095ea7b360e01b90606401611464565b505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905290808061163385610f0f565b61ffff1684526116446107b2611073565b84516116539061ffff16611073565b61165d9190611eb9565b915061166d826301e28500611e77565b6116779084611deb565b9250816107b2856000015161168c9190611e54565b61ffff1661169a9190611eb9565b6116a8906301e13380611e77565b6116b29084611deb565b92506000600191505b600c8260ff1611611723576116d48286600001516110b8565b6116e49060ff1662015180611e77565b9050856116f18583611deb565b11156117055760ff82166020860152611723565b61170f8185611deb565b93508161171b81611ef1565b9250506116bb565b600191505b61173a856020015186600001516110b8565b60ff168260ff161161178957856117548562015180611deb565b11156117685760ff82166040860152611789565b6117756201518085611deb565b93508161178181611ef1565b925050611728565b611792866106fe565b60ff1660608601526117a386611422565b60ff1660808601526117b486610bc1565b60ff1660a08601526117c586610861565b60ff1660c08601525092949350505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526115ea90849063a9059cbb60e01b90606401611464565b60006118b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119499092919063ffffffff16565b8051909150156115ea57808060200190518101906118d79190611f11565b6115ea5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610916565b6060610d548484600085856001600160a01b0385163b6119ab5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610916565b600080866001600160a01b031685876040516119c79190611f5f565b60006040518083038185875af1925050503d8060008114611a04576040519150601f19603f3d011682016040523d82523d6000602084013e611a09565b606091505b5091509150611a19828286611a24565b979650505050505050565b60608315611a33575081610d57565b825115611a435782518084602001fd5b8160405162461bcd60e51b81526004016109169190611f7b565b604051806101800160405280600c906020820280368337509192915050565b80356001600160a01b0381168114611a9357600080fd5b919050565b60008060008060008060008060006101208a8c031215611ab757600080fd5b611ac08a611a7c565b9850611ace60208b01611a7c565b9750611adc60408b01611a7c565b965060608a01359550611af160808b01611a7c565b989b979a50959894979660a0860135965060c08601359560e0810135955061010001359350915050565b600060208284031215611b2d57600080fd5b5035919050565b60008060408385031215611b4757600080fd5b611b5083611a7c565b946020939093013593505050565b600060208284031215611b7057600080fd5b610d5782611a7c565b803561ffff81168114611a9357600080fd5b803560ff81168114611a9357600080fd5b600080600080600060a08688031215611bb457600080fd5b611bbd86611b79565b9450611bcb60208701611b8b565b9350611bd960408701611b8b565b9250611be760608701611b8b565b9150611bf560808701611b8b565b90509295509295909350565b60008060008060808587031215611c1757600080fd5b611c2085611b79565b9350611c2e60208601611b8b565b9250611c3c60408601611b8b565b9150611c4a60608601611b8b565b905092959194509250565b600080600060608486031215611c6a57600080fd5b611c7384611b79565b9250611c8160208501611b8b565b9150611c8f60408501611b8b565b90509250925092565b60008060008060008060c08789031215611cb157600080fd5b611cba87611b79565b9550611cc860208801611b8b565b9450611cd660408801611b8b565b9350611ce460608801611b8b565b9250611cf260808801611b8b565b9150611d0060a08801611b8b565b90509295509295509295565b600060208284031215611d1e57600080fd5b610d5782611b79565b60008060408385031215611d3a57600080fd5b611d4383611b8b565b9150611d5160208401611b79565b90509250929050565b60008060408385031215611d6d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611da657611da6611d7c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611dd257611dd2611dad565b500490565b600082611de657611de6611dad565b500690565b60008219821115611dfe57611dfe611d7c565b500190565b600060208284031215611e1557600080fd5b5051919050565b600061ffff80831681811415611e3457611e34611d7c565b6001019392505050565b634e487b7160e01b600052603260045260246000fd5b600061ffff83811690831681811015611e6f57611e6f611d7c565b039392505050565b6000816000190483118215151615611e9157611e91611d7c565b500290565b600060ff821660ff841680821015611eb057611eb0611d7c565b90039392505050565b600082821015611ecb57611ecb611d7c565b500390565b600061ffff80841680611ee557611ee5611dad565b92169190910692915050565b600060ff821660ff811415611f0857611f08611d7c565b60010192915050565b600060208284031215611f2357600080fd5b81518015158114610d5757600080fd5b60005b83811015611f4e578181015183820152602001611f36565b838111156114c85750506000910152565b60008251611f71818460208701611f33565b9190910192915050565b6020815260008251806020840152611f9a816040850160208701611f33565b601f01601f1916919091016040019291505056fea164736f6c634300080a000a";

export class CreditVault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _aaveLendingPool: string,
    _registry: string,
    _aaveBtcStable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CreditVault> {
    return super.deploy(
      _aaveLendingPool,
      _registry,
      _aaveBtcStable,
      overrides || {}
    ) as Promise<CreditVault>;
  }
  getDeployTransaction(
    _aaveLendingPool: string,
    _registry: string,
    _aaveBtcStable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aaveLendingPool,
      _registry,
      _aaveBtcStable,
      overrides || {}
    );
  }
  attach(address: string): CreditVault {
    return super.attach(address) as CreditVault;
  }
  connect(signer: Signer): CreditVault__factory {
    return super.connect(signer) as CreditVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreditVaultInterface {
    return new utils.Interface(_abi) as CreditVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreditVault {
    return new Contract(address, _abi, signerOrProvider) as CreditVault;
  }
}
