/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Denominations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Denominations__factory>;
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "FeedRegistryInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedRegistryInterface__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "CreditVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreditVault__factory>;
    getContractFactory(
      name: "DebitVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebitVault__factory>;
    getContractFactory(
      name: "ERC721securitization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721securitization__factory>;
    getContractFactory(
      name: "IAaveDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveDebtToken__factory>;
    getContractFactory(
      name: "IAaveLendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveLendingPool__factory>;
    getContractFactory(
      name: "IAaveProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveProtocolDataProvider__factory>;
    getContractFactory(
      name: "ICreditVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditVault__factory>;
    getContractFactory(
      name: "IERC721securitization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721securitization__factory>;
    getContractFactory(
      name: "IEthosERC721DeckWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEthosERC721DeckWrapper__factory>;
    getContractFactory(
      name: "DateTime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DateTime__factory>;
    getContractFactory(
      name: "Securitization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Securitization__factory>;

    getContractAt(
      name: "Denominations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Denominations>;
    getContractAt(
      name: "AggregatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "FeedRegistryInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedRegistryInterface>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "CreditVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreditVault>;
    getContractAt(
      name: "DebitVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DebitVault>;
    getContractAt(
      name: "ERC721securitization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721securitization>;
    getContractAt(
      name: "IAaveDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveDebtToken>;
    getContractAt(
      name: "IAaveLendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveLendingPool>;
    getContractAt(
      name: "IAaveProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveProtocolDataProvider>;
    getContractAt(
      name: "ICreditVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditVault>;
    getContractAt(
      name: "IERC721securitization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721securitization>;
    getContractAt(
      name: "IEthosERC721DeckWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEthosERC721DeckWrapper>;
    getContractAt(
      name: "DateTime",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DateTime>;
    getContractAt(
      name: "Securitization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Securitization>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
